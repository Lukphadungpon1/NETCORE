// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NETCORE.Models.DB;

namespace NETCORE.Migrations
{
    [DbContext(typeof(KPIContext))]
    partial class KPIContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:Collation", "Thai_100_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("NETCORE.Models.DB.BplusDatum", b =>
                {
                    b.Property<double?>("Ab")
                        .HasColumnType("float")
                        .HasColumnName("ab");

                    b.Property<double?>("Al")
                        .HasColumnType("float")
                        .HasColumnName("al");

                    b.Property<string>("Code")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("code");

                    b.Property<DateTime?>("Dates")
                        .HasColumnType("date")
                        .HasColumnName("dates");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<double?>("Ot1")
                        .HasColumnType("float")
                        .HasColumnName("ot1");

                    b.Property<double?>("Ot15")
                        .HasColumnType("float")
                        .HasColumnName("ot15");

                    b.Property<double?>("Ot3")
                        .HasColumnType("float")
                        .HasColumnName("ot3");

                    b.Property<double?>("Pl")
                        .HasColumnType("float")
                        .HasColumnName("pl");

                    b.Property<string>("Remark")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("remark");

                    b.Property<double?>("Sl")
                        .HasColumnType("float")
                        .HasColumnName("sl");

                    b.ToTable("BplusData");
                });

            modelBuilder.Entity("NETCORE.Models.DB.Emp", b =>
                {
                    b.Property<string>("Department")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<double?>("Depcode")
                        .HasColumnType("float")
                        .HasColumnName("DEPCODE");

                    b.Property<string>("EMail")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("E-mail");

                    b.Property<double?>("Empcode")
                        .HasColumnType("float")
                        .HasColumnName("EMPCODE");

                    b.Property<string>("NameEng")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("nameENG");

                    b.Property<double?>("No")
                        .HasColumnType("float")
                        .HasColumnName("No#");

                    b.Property<string>("Position")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Section")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.ToTable("EMP");
                });

            modelBuilder.Entity("NETCORE.Models.DB.Empgroup", b =>
                {
                    b.Property<string>("Groupid")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("GROUPID");

                    b.Property<string>("Groupname")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("GROUPNAME");

                    b.HasKey("Groupid");

                    b.ToTable("EMPGROUP");
                });

            modelBuilder.Entity("NETCORE.Models.DB.Employee", b =>
                {
                    b.Property<string>("Empid")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("EMPID");

                    b.Property<string>("Companyid")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("COMPANYID");

                    b.Property<string>("Empdepart")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("EMPDEPART");

                    b.Property<string>("Empname")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("EMPNAME");

                    b.Property<string>("Groupid")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)")
                        .HasColumnName("GROUPID");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("PASSWORD");

                    b.Property<string>("Position")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("POSITION");

                    b.Property<string>("Stat")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("STAT")
                        .IsFixedLength(true);

                    b.Property<string>("Usertype")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("USERTYPE")
                        .IsFixedLength(true);

                    b.HasKey("Empid");

                    b.ToTable("EMPLOYEE");
                });

            modelBuilder.Entity("NETCORE.Models.DB.Grade", b =>
                {
                    b.Property<string>("Grade1")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)")
                        .HasColumnName("GRADE");

                    b.Property<string>("Type")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)")
                        .HasColumnName("TYPE");

                    b.Property<string>("Description")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("DESCRIPTION");

                    b.HasKey("Grade1", "Type");

                    b.ToTable("GRADE");
                });

            modelBuilder.Entity("NETCORE.Models.DB.Jobh", b =>
                {
                    b.Property<string>("Jobid")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("JOBID")
                        .IsFixedLength(true);

                    b.Property<string>("Dept")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("DEPT")
                        .IsFixedLength(true);

                    b.Property<bool?>("CalActual")
                        .HasColumnType("bit")
                        .HasColumnName("CAL_ACTUAL");

                    b.Property<bool?>("CalPdtvt")
                        .HasColumnType("bit")
                        .HasColumnName("CAL_PDTVT");

                    b.Property<string>("Codetype")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("CODETYPE")
                        .IsFixedLength(true);

                    b.Property<string>("Criteria")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)")
                        .HasColumnName("CRITERIA");

                    b.Property<string>("Die")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)")
                        .HasColumnName("DIE");

                    b.Property<string>("Jobdetail")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("JOBDETAIL");

                    b.Property<string>("Jobinfo")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("JOBINFO");

                    b.Property<string>("Kpi")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)")
                        .HasColumnName("KPI");

                    b.Property<decimal?>("Level1")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("LEVEL1");

                    b.Property<decimal?>("Level2")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("LEVEL2");

                    b.Property<decimal?>("Level3")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("LEVEL3");

                    b.Property<string>("Timetype")
                        .HasMaxLength(2)
                        .HasColumnType("nchar(2)")
                        .HasColumnName("TIMETYPE")
                        .IsFixedLength(true);

                    b.Property<string>("Type")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("TYPE");

                    b.Property<string>("Unit")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("UNIT");

                    b.HasKey("Jobid", "Dept");

                    b.ToTable("JOBH");
                });

            modelBuilder.Entity("NETCORE.Models.DB.JobhBackup", b =>
                {
                    b.Property<string>("Codetype")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("CODETYPE")
                        .IsFixedLength(true);

                    b.Property<string>("Criteria")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)")
                        .HasColumnName("CRITERIA");

                    b.Property<string>("Dept")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("DEPT")
                        .IsFixedLength(true);

                    b.Property<string>("Die")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)")
                        .HasColumnName("DIE");

                    b.Property<string>("Jobdetail")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("JOBDETAIL");

                    b.Property<string>("Jobid")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("JOBID")
                        .IsFixedLength(true);

                    b.Property<string>("Jobinfo")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("JOBINFO");

                    b.Property<string>("Kpi")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)")
                        .HasColumnName("KPI");

                    b.Property<decimal?>("Level1")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("LEVEL1");

                    b.Property<decimal?>("Level2")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("LEVEL2");

                    b.Property<decimal?>("Level3")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("LEVEL3");

                    b.Property<string>("Timetype")
                        .HasMaxLength(2)
                        .HasColumnType("nchar(2)")
                        .HasColumnName("TIMETYPE")
                        .IsFixedLength(true);

                    b.Property<string>("Type")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("TYPE");

                    b.Property<string>("Unit")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("UNIT");

                    b.ToTable("JOBH_BACKUP");
                });

            modelBuilder.Entity("NETCORE.Models.DB.Kpi", b =>
                {
                    b.Property<string>("Kpiid")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("KPIID")
                        .IsFixedLength(true);

                    b.Property<string>("Kpidetail")
                        .HasMaxLength(250)
                        .HasColumnType("nchar(250)")
                        .HasColumnName("KPIDETAIL")
                        .IsFixedLength(true);

                    b.Property<string>("Kpiname")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("KPINAME");

                    b.Property<string>("Kpiunit")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("KPIUNIT");

                    b.Property<decimal?>("Kpiweight")
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("KPIWEIGHT");

                    b.HasKey("Kpiid");

                    b.ToTable("KPI");
                });

            modelBuilder.Entity("NETCORE.Models.DB.KpiFoamspec", b =>
                {
                    b.Property<string>("Monum")
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("char(16)")
                        .HasColumnName("MONUM")
                        .IsFixedLength(true);

                    b.Property<decimal?>("Hphfan")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("HPHFAN");

                    b.Property<decimal?>("Hphtemp")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("HPHTEMP");

                    b.Property<decimal?>("Inspeed")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("INSPEED");

                    b.Property<decimal?>("Outspeed")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("OUTSPEED");

                    b.Property<decimal?>("Ratio")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("RATIO");

                    b.Property<decimal?>("Setuplen")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("SETUPLEN");

                    b.Property<decimal?>("Setupwid")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("SETUPWID");

                    b.HasKey("Monum");

                    b.ToTable("KPI_FOAMSPEC");
                });

            modelBuilder.Entity("NETCORE.Models.DB.KpiSlitMo", b =>
                {
                    b.Property<int>("Rowid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ROWID")
                        .UseIdentityColumn();

                    b.Property<int>("EntryId")
                        .HasColumnType("int")
                        .HasColumnName("ENTRY_ID");

                    b.Property<string>("Itemdesc")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("ITEMDESC");

                    b.Property<string>("Itemno")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ITEMNO");

                    b.Property<string>("Linenum")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("LINENUM");

                    b.Property<string>("Monum")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("MONUM");

                    b.HasKey("Rowid");

                    b.HasIndex("EntryId");

                    b.ToTable("KPI_SLIT_MO");
                });

            modelBuilder.Entity("NETCORE.Models.DB.Kpidaily", b =>
                {
                    b.Property<int>("Entryid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ENTRYID")
                        .UseIdentityColumn();

                    b.Property<string>("Comment")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("COMMENT");

                    b.Property<DateTime?>("Createdt")
                        .HasColumnType("datetime")
                        .HasColumnName("CREATEDT");

                    b.Property<string>("Detail")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("DETAIL");

                    b.Property<string>("Empid")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("EMPID");

                    b.Property<DateTime?>("Enddate")
                        .HasColumnType("date")
                        .HasColumnName("ENDDATE");

                    b.Property<TimeSpan?>("Endtime")
                        .HasColumnType("time")
                        .HasColumnName("ENDTIME");

                    b.Property<string>("Jobid")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("JOBID");

                    b.Property<decimal?>("Lenght")
                        .HasColumnType("numeric(10,3)")
                        .HasColumnName("LENGHT");

                    b.Property<string>("Lot")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LOT");

                    b.Property<decimal?>("Min")
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("MIN");

                    b.Property<string>("Monum")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("char(20)")
                        .HasColumnName("MONUM")
                        .IsFixedLength(true);

                    b.Property<decimal?>("Nglen")
                        .HasColumnType("decimal(18,3)")
                        .HasColumnName("NGLEN");

                    b.Property<int?>("QtyLenght")
                        .HasColumnType("int")
                        .HasColumnName("QTY_LENGHT");

                    b.Property<string>("Reason")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("REASON");

                    b.Property<decimal?>("RecycStock")
                        .HasColumnType("numeric(10,3)")
                        .HasColumnName("RECYC_STOCK");

                    b.Property<decimal?>("ReguidingEx")
                        .HasColumnType("numeric(10,3)")
                        .HasColumnName("REGUIDING_EX");

                    b.Property<decimal?>("Scrap")
                        .HasColumnType("numeric(10,3)")
                        .HasColumnName("SCRAP");

                    b.Property<string>("Shiftid")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("SHIFTID");

                    b.Property<DateTime?>("Startdate")
                        .HasColumnType("date")
                        .HasColumnName("STARTDATE");

                    b.Property<TimeSpan?>("Starttime")
                        .HasColumnType("time")
                        .HasColumnName("STARTTIME");

                    b.Property<decimal?>("Weight")
                        .HasColumnType("numeric(10,3)")
                        .HasColumnName("WEIGHT");

                    b.HasKey("Entryid");

                    b.ToTable("KPIDAILY");
                });

            modelBuilder.Entity("NETCORE.Models.DB.KpidailyDataentryLog", b =>
                {
                    b.Property<int>("Runno")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RUNNO")
                        .UseIdentityColumn();

                    b.Property<string>("Comment")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("COMMENT");

                    b.Property<DateTime?>("Createdt")
                        .HasColumnType("datetime")
                        .HasColumnName("CREATEDT");

                    b.Property<string>("Detail")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("DETAIL");

                    b.Property<string>("Empid")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("EMPID");

                    b.Property<DateTime?>("Enddate")
                        .HasColumnType("date")
                        .HasColumnName("ENDDATE");

                    b.Property<TimeSpan?>("Endtime")
                        .HasColumnType("time")
                        .HasColumnName("ENDTIME");

                    b.Property<int?>("Entryid")
                        .HasColumnType("int")
                        .HasColumnName("ENTRYID");

                    b.Property<string>("Jobid")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("JOBID");

                    b.Property<decimal?>("Lenght")
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("LENGHT");

                    b.Property<string>("Lot")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LOT");

                    b.Property<decimal?>("Min")
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("MIN");

                    b.Property<string>("Monum")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("char(20)")
                        .HasColumnName("MONUM")
                        .IsFixedLength(true);

                    b.Property<decimal?>("Nglen")
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("NGLEN");

                    b.Property<int?>("QtyLenght")
                        .HasColumnType("int")
                        .HasColumnName("QTY_LENGHT");

                    b.Property<string>("Reason")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("REASON");

                    b.Property<decimal?>("RecycStock")
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("RECYC_STOCK");

                    b.Property<decimal?>("ReguReguidingEx")
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("REGu\r\nREGUIDING_EX");

                    b.Property<decimal?>("Scrap")
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("SCRAP");

                    b.Property<string>("Shiftid")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("SHIFTID");

                    b.Property<DateTime?>("Startdate")
                        .HasColumnType("date")
                        .HasColumnName("STARTDATE");

                    b.Property<TimeSpan?>("Starttime")
                        .HasColumnType("time")
                        .HasColumnName("STARTTIME");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("STATUS");

                    b.Property<string>("Updateby")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("UPDATEBY");

                    b.Property<DateTime?>("Updatedate")
                        .HasColumnType("datetime")
                        .HasColumnName("UPDATEDATE");

                    b.Property<decimal?>("Weight")
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("WEIGHT");

                    b.HasKey("Runno");

                    b.ToTable("KPIDAILY_DATAENTRY_LOG");
                });

            modelBuilder.Entity("NETCORE.Models.DB.KpidailyRework", b =>
                {
                    b.Property<int>("RowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("rowId")
                        .UseIdentityColumn();

                    b.Property<string>("Comment")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("comment");

                    b.Property<string>("Detail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("detail");

                    b.Property<string>("EmpId")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("empId");

                    b.Property<string>("Empg")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("empg")
                        .IsFixedLength(true);

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime")
                        .HasColumnName("endDate");

                    b.Property<string>("JobId")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("jobId");

                    b.Property<decimal?>("Min")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("min");

                    b.Property<decimal?>("Output")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("output");

                    b.Property<string>("ReworkNo")
                        .HasMaxLength(9)
                        .IsUnicode(false)
                        .HasColumnType("varchar(9)")
                        .HasColumnName("reworkNo");

                    b.Property<decimal?>("Scrap")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("scrap");

                    b.Property<string>("Shift")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("shift")
                        .IsFixedLength(true);

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime")
                        .HasColumnName("startDate");

                    b.HasKey("RowId");

                    b.ToTable("KPIDAILY_REWORK");
                });

            modelBuilder.Entity("NETCORE.Models.DB.KpidailySlit", b =>
                {
                    b.Property<int>("Rowid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ROWID")
                        .UseIdentityColumn();

                    b.Property<string>("Comment")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("COMMENT");

                    b.Property<string>("Detail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("DETAIL");

                    b.Property<string>("Empg")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EMPG");

                    b.Property<string>("Empid")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("EMPID");

                    b.Property<DateTime?>("Enddate")
                        .HasColumnType("datetime")
                        .HasColumnName("ENDDATE");

                    b.Property<int>("EntryId")
                        .HasColumnType("int")
                        .HasColumnName("ENTRY_ID");

                    b.Property<string>("Jobid")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("JOBID");

                    b.Property<decimal?>("Length")
                        .HasColumnType("decimal(7,2)")
                        .HasColumnName("LENGTH");

                    b.Property<decimal?>("Min")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("MIN");

                    b.Property<int?>("Piece")
                        .HasColumnType("int")
                        .HasColumnName("PIECE");

                    b.Property<int?>("Roll")
                        .HasColumnType("int")
                        .HasColumnName("ROLL");

                    b.Property<string>("Shiftid")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("SHIFTID");

                    b.Property<DateTime?>("Stampdate")
                        .HasColumnType("datetime")
                        .HasColumnName("STAMPDATE");

                    b.Property<DateTime?>("Startdate")
                        .HasColumnType("datetime")
                        .HasColumnName("STARTDATE");

                    b.HasKey("Rowid");

                    b.HasIndex("EntryId");

                    b.ToTable("KPIDAILY_SLIT");
                });

            modelBuilder.Entity("NETCORE.Models.DB.KpidailySlitDetail", b =>
                {
                    b.Property<int>("Rowid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ROWID")
                        .UseIdentityColumn();

                    b.Property<string>("Barcode")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("BARCODE");

                    b.Property<int?>("Cutqty")
                        .HasColumnType("int")
                        .HasColumnName("CUTQTY");

                    b.Property<decimal?>("Cutwidth")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("CUTWIDTH");

                    b.Property<int?>("Detailid")
                        .HasColumnType("int")
                        .HasColumnName("DETAILID");

                    b.Property<int?>("Linenum")
                        .HasColumnType("int")
                        .HasColumnName("LINENUM");

                    b.Property<string>("Monum")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("MONUM");

                    b.Property<decimal?>("Scrap")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("SCRAP");

                    b.Property<string>("SlitNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("SLIT_NO");

                    b.HasKey("Rowid");

                    b.ToTable("KPIDAILY_SLIT_DETAIL");
                });

            modelBuilder.Entity("NETCORE.Models.DB.Kpih", b =>
                {
                    b.Property<string>("Monum")
                        .HasMaxLength(20)
                        .HasColumnType("nchar(20)")
                        .HasColumnName("monum")
                        .IsFixedLength(true);

                    b.Property<decimal?>("ActHrs")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("ACT_HRS");

                    b.Property<string>("CreateBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("create_by");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("create_date");

                    b.Property<string>("FullReel")
                        .HasMaxLength(1)
                        .HasColumnType("nchar(1)")
                        .HasColumnName("full_reel")
                        .IsFixedLength(true);

                    b.Property<decimal?>("GuideSheet")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("guide_sheet");

                    b.Property<decimal?>("InputLen")
                        .HasColumnType("decimal(18,3)")
                        .HasColumnName("input_len");

                    b.Property<decimal?>("InputWet")
                        .HasColumnType("decimal(18,3)")
                        .HasColumnName("input_wet");

                    b.Property<decimal?>("KgHr")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("kg_hr");

                    b.Property<string>("Machine")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("MACHINE");

                    b.Property<decimal?>("NgLen")
                        .HasColumnType("decimal(18,3)")
                        .HasColumnName("ng_len");

                    b.Property<decimal?>("NonHrs")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("NON_HRS");

                    b.Property<decimal?>("OutputLen")
                        .HasColumnType("decimal(18,3)")
                        .HasColumnName("output_len");

                    b.Property<decimal?>("OutputWet")
                        .HasColumnType("decimal(18,3)")
                        .HasColumnName("output_wet");

                    b.Property<DateTime?>("ProduceDate")
                        .HasColumnType("date")
                        .HasColumnName("produce_date");

                    b.Property<string>("ProduceType")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("produce_type")
                        .IsFixedLength(true);

                    b.Property<decimal?>("Productivity")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("productivity");

                    b.Property<decimal?>("Qcng")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("QCNG");

                    b.Property<decimal?>("Qcyield")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("QCYIELD");

                    b.Property<decimal?>("QtyRoll")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("qty_roll");

                    b.Property<decimal?>("QtyRollNg")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("qty_rollNG");

                    b.Property<decimal?>("RecycStock")
                        .HasColumnType("decimal(18,3)")
                        .HasColumnName("RECYC_STOCK");

                    b.Property<string>("ReelNo")
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .HasColumnName("reel_no")
                        .IsFixedLength(true);

                    b.Property<decimal?>("Reguiding")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("reguiding");

                    b.Property<decimal?>("Resin")
                        .HasColumnType("decimal(18,4)")
                        .HasColumnName("resin");

                    b.Property<decimal?>("Rolls")
                        .HasColumnType("decimal(18,3)")
                        .HasColumnName("ROLLS");

                    b.Property<decimal?>("Rpm")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("rpm");

                    b.Property<decimal?>("Scarp")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("scarp");

                    b.Property<decimal?>("ScrapCalculate")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("scrap_calculate");

                    b.Property<decimal?>("Screw")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("screw");

                    b.Property<decimal?>("TotReel")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("tot_reel");

                    b.Property<decimal?>("TotWeight")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("tot_weight");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("update_by");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("update_date");

                    b.Property<decimal?>("Yield")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("yield");

                    b.HasKey("Monum");

                    b.ToTable("KPIH");
                });

            modelBuilder.Entity("NETCORE.Models.DB.KpihRework", b =>
                {
                    b.Property<string>("ReworkNo")
                        .HasMaxLength(9)
                        .IsUnicode(false)
                        .HasColumnType("varchar(9)")
                        .HasColumnName("reworkNo");

                    b.Property<string>("CreateBy")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("createBy");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("createDate");

                    b.Property<decimal?>("InputQty")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("inputQty");

                    b.Property<string>("ItemDesc")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("itemDesc");

                    b.Property<string>("ItemNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("itemNo");

                    b.Property<string>("LotNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("lotNo");

                    b.Property<decimal?>("OutputQty")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("outputQty");

                    b.Property<string>("ReworkArea")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("reworkArea");

                    b.Property<DateTime?>("ReworkDate")
                        .HasColumnType("datetime")
                        .HasColumnName("reworkDate");

                    b.Property<long?>("ReworkStatus")
                        .HasColumnType("bigint")
                        .HasColumnName("reworkStatus");

                    b.Property<string>("ReworkType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("reworkType");

                    b.Property<decimal?>("Scrap")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("scrap");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("updateBy");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("updateDate");

                    b.HasKey("ReworkNo");

                    b.ToTable("KPIH_REWORK");
                });

            modelBuilder.Entity("NETCORE.Models.DB.KpihSlit", b =>
                {
                    b.Property<int>("EntryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ENTRY_ID")
                        .UseIdentityColumn();

                    b.Property<string>("Areacd")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("AREACD");

                    b.Property<string>("CreateBy")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CREATE_BY");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CREATE_DATE");

                    b.Property<string>("Itemno")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ITEMNO");

                    b.Property<decimal?>("Length")
                        .HasColumnType("decimal(7,3)")
                        .HasColumnName("LENGTH");

                    b.Property<string>("Machine")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("MACHINE");

                    b.Property<int?>("Roll")
                        .HasColumnType("int")
                        .HasColumnName("ROLL");

                    b.Property<string>("SlitNo")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("SLIT_NO");

                    b.Property<int?>("SlitPiece")
                        .HasColumnType("int")
                        .HasColumnName("SLIT_PIECE");

                    b.HasKey("EntryId");

                    b.ToTable("KPIH_SLIT");
                });

            modelBuilder.Entity("NETCORE.Models.DB.Laminate", b =>
                {
                    b.Property<string>("Criteria")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("CRITERIA");

                    b.Property<string>("Dept")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("DEPT");

                    b.Property<string>("Die")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("DIE");

                    b.Property<double?>("Hide")
                        .HasColumnType("float");

                    b.Property<string>("Jobdetail")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("JOBDETAIL");

                    b.Property<string>("Jobid")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("JOBID");

                    b.Property<string>("Jobinfo")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("JOBINFO");

                    b.Property<string>("Kpi")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("KPI");

                    b.Property<double?>("Level1")
                        .HasColumnType("float")
                        .HasColumnName("LEVEL1");

                    b.Property<double?>("Level2")
                        .HasColumnType("float")
                        .HasColumnName("LEVEL2");

                    b.Property<double?>("Level3")
                        .HasColumnType("float")
                        .HasColumnName("LEVEL3");

                    b.Property<double?>("Productivity")
                        .HasColumnType("float");

                    b.Property<double?>("RunProduction")
                        .HasColumnType("float")
                        .HasColumnName("Run Production");

                    b.Property<string>("Timetype")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("TIMETYPE");

                    b.Property<string>("Type")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("TYPE");

                    b.Property<string>("Unit")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("UNIT");

                    b.ToTable("LAMINATE");
                });

            modelBuilder.Entity("NETCORE.Models.DB.Leave2019", b =>
                {
                    b.Property<double?>("AnnualLeave2020")
                        .HasColumnType("float")
                        .HasColumnName("Annual leave _2020");

                    b.Property<double?>("BalanceFrom15Days")
                        .HasColumnType("float")
                        .HasColumnName("Balance from _15 days");

                    b.Property<string>("Department")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<double?>("DeptCode")
                        .HasColumnType("float")
                        .HasColumnName("Dept code");

                    b.Property<double?>("EmpCode")
                        .HasColumnType("float")
                        .HasColumnName("Emp# Code");

                    b.Property<DateTime?>("EmployedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("Employed Date");

                    b.Property<double?>("F20")
                        .HasColumnType("float");

                    b.Property<double?>("F21")
                        .HasColumnType("float");

                    b.Property<string>("NameLastnameEng")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Name - Lastname - ENG");

                    b.Property<double?>("No")
                        .HasColumnType("float");

                    b.Property<double?>("Outstanding2019")
                        .HasColumnType("float")
                        .HasColumnName("Outstanding_2019");

                    b.Property<string>("Position")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Section")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<double?>("TakeLeaveAfterPayAnnualLeaveMore15Days")
                        .HasColumnType("float")
                        .HasColumnName("Take leave after _pay annual leave more 15 days");

                    b.Property<double?>("TakenAnnualLeave2019")
                        .HasColumnType("float")
                        .HasColumnName("Taken annual leave 2019");

                    b.Property<double?>("TakenAnnualLeave20191")
                        .HasColumnType("float")
                        .HasColumnName("Taken annual leave 20191");

                    b.Property<double?>("TotalAnnualLeave2020")
                        .HasColumnType("float")
                        .HasColumnName("Total_annual leave 2020");

                    b.Property<double?>("TotalAnnualLeave20201")
                        .HasColumnType("float")
                        .HasColumnName("Total annual leave 2020");

                    b.Property<double?>("TotalValidAnnualLeave2019")
                        .HasColumnType("float")
                        .HasColumnName("Total valid _annual leave 2019");

                    b.Property<double?>("TotalValidAnnualLeave2020")
                        .HasColumnType("float")
                        .HasColumnName("Total valid _annual leave 2020");

                    b.Property<string>("ใชสทธพกรอนไดเมออายงานครบ1ป")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("ใช้สิทธิพักร้อนได้เมื่ออายุงานครบ 1 ปี");

                    b.ToTable("leave2019");
                });

            modelBuilder.Entity("NETCORE.Models.DB.Overtime", b =>
                {
                    b.Property<double?>("Ab")
                        .HasColumnType("float")
                        .HasColumnName("ab");

                    b.Property<double?>("Al")
                        .HasColumnType("float")
                        .HasColumnName("al");

                    b.Property<string>("Code")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("code");

                    b.Property<string>("Dates")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("dates");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<double?>("Ot1")
                        .HasColumnType("float")
                        .HasColumnName("ot1");

                    b.Property<double?>("Ot15")
                        .HasColumnType("float")
                        .HasColumnName("ot15");

                    b.Property<double?>("Ot3")
                        .HasColumnType("float")
                        .HasColumnName("ot3");

                    b.Property<double?>("Pl")
                        .HasColumnType("float")
                        .HasColumnName("pl");

                    b.Property<string>("Remark")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("remark");

                    b.Property<double?>("Sl")
                        .HasColumnType("float")
                        .HasColumnName("sl");

                    b.ToTable("overtime");
                });

            modelBuilder.Entity("NETCORE.Models.DB.Shift", b =>
                {
                    b.Property<string>("Shiftid")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("SHIFTID")
                        .IsFixedLength(true);

                    b.Property<string>("Endtime")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnName("ENDTIME");

                    b.Property<string>("Shiftname")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("SHIFTNAME");

                    b.Property<string>("Starttime")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnName("STARTTIME");

                    b.HasKey("Shiftid");

                    b.ToTable("SHIFT");
                });

            modelBuilder.Entity("NETCORE.Models.DB.Test", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Detail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("DETAIL");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("NAME");

                    b.HasKey("Id");

                    b.ToTable("TEST");
                });

            modelBuilder.Entity("NETCORE.Models.DB.UfEmp", b =>
                {
                    b.Property<string>("Empcode")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("EMPCODE")
                        .IsFixedLength(true);

                    b.Property<string>("Empgroup")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("EMPGROUP")
                        .IsFixedLength(true);

                    b.ToTable("Uf_Emp");
                });

            modelBuilder.Entity("NETCORE.Models.DB.UfMcPerformc", b =>
                {
                    b.Property<string>("Action")
                        .HasColumnType("text")
                        .HasColumnName("ACTION");

                    b.Property<string>("Comment")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("COMMENT");

                    b.Property<int?>("Entryid")
                        .HasColumnType("int")
                        .HasColumnName("ENTRYID");

                    b.Property<string>("Monum")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("char(12)")
                        .HasColumnName("MONUM")
                        .IsFixedLength(true);

                    b.Property<string>("Problem")
                        .HasColumnType("text")
                        .HasColumnName("PROBLEM");

                    b.Property<string>("Result")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("RESULT")
                        .IsFixedLength(true);

                    b.ToTable("Uf_Mc_Performc");
                });

            modelBuilder.Entity("NETCORE.Models.DB.VwKpiActhr", b =>
                {
                    b.Property<decimal?>("Acthrs")
                        .HasColumnType("numeric(38,6)")
                        .HasColumnName("ACTHRS");

                    b.Property<string>("Monum")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nchar(20)")
                        .HasColumnName("monum")
                        .IsFixedLength(true);

                    b.Property<decimal?>("Yield")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("yield");

                    b.ToView("VW_KPI_ACTHRS");
                });

            modelBuilder.Entity("NETCORE.Models.DB.VwKpiActhrsByOp", b =>
                {
                    b.Property<decimal?>("Acthrs")
                        .HasColumnType("numeric(38,6)")
                        .HasColumnName("ACTHRS");

                    b.Property<string>("Monum")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("MONUM")
                        .UseCollation("Thai_BIN");

                    b.Property<string>("Operno")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("OPERNO")
                        .UseCollation("Thai_BIN");

                    b.ToView("VW_KPI_ACTHRS_BY_OP");
                });

            modelBuilder.Entity("NETCORE.Models.DB.VwKpiComment", b =>
                {
                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("COMMENT");

                    b.Property<string>("Monum")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nchar(12)")
                        .HasColumnName("monum")
                        .IsFixedLength(true);

                    b.Property<string>("Shiftid")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("SHIFTID");

                    b.ToView("VW_KPI_COMMENT");
                });

            modelBuilder.Entity("NETCORE.Models.DB.VwKpiD", b =>
                {
                    b.Property<string>("Endtime")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("ENDTIME");

                    b.Property<DateTime?>("Endworking")
                        .HasColumnType("datetime")
                        .HasColumnName("ENDWORKING");

                    b.Property<string>("Monum")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("char(20)")
                        .HasColumnName("MONUM")
                        .IsFixedLength(true);

                    b.Property<decimal?>("RecycStock")
                        .HasColumnType("numeric(38,2)")
                        .HasColumnName("RECYC_STOCK");

                    b.Property<decimal?>("Scrap")
                        .HasColumnType("numeric(38,2)")
                        .HasColumnName("SCRAP");

                    b.Property<string>("Shiftid")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("SHIFTID");

                    b.Property<string>("Starttime")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("STARTTIME");

                    b.Property<DateTime?>("Startworking")
                        .HasColumnType("datetime")
                        .HasColumnName("STARTWORKING");

                    b.ToView("VW_KPI_D");
                });

            modelBuilder.Entity("NETCORE.Models.DB.VwKpiDetail", b =>
                {
                    b.Property<string>("Detail")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DETAIL");

                    b.Property<string>("Monum")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nchar(12)")
                        .HasColumnName("monum")
                        .IsFixedLength(true);

                    b.Property<string>("Shiftid")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("SHIFTID");

                    b.ToView("VW_KPI_DETAIL");
                });

            modelBuilder.Entity("NETCORE.Models.DB.VwKpiHr", b =>
                {
                    b.Property<decimal?>("Hrs")
                        .HasColumnType("numeric(38,6)")
                        .HasColumnName("HRS");

                    b.Property<decimal?>("Mchrs")
                        .HasColumnType("numeric(38,6)")
                        .HasColumnName("MCHrs");

                    b.Property<string>("Monum")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nchar(20)")
                        .HasColumnName("monum")
                        .IsFixedLength(true);

                    b.Property<decimal?>("RecycStock")
                        .HasColumnType("numeric(38,2)")
                        .HasColumnName("RECYC_STOCK");

                    b.Property<string>("Timetype")
                        .HasMaxLength(2)
                        .HasColumnType("nchar(2)")
                        .HasColumnName("TIMETYPE")
                        .IsFixedLength(true);

                    b.Property<decimal?>("Wdhrs")
                        .HasColumnType("numeric(38,6)");

                    b.ToView("VW_KPI_HRS");
                });

            modelBuilder.Entity("NETCORE.Models.DB.VwKpiOutput", b =>
                {
                    b.Property<string>("Monum")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nchar(20)")
                        .HasColumnName("MONUM")
                        .IsFixedLength(true);

                    b.Property<decimal?>("QtyOutput")
                        .HasColumnType("decimal(20,2)")
                        .HasColumnName("QTY_OUTPUT");

                    b.ToView("VW_KPI_OUTPUT");
                });

            modelBuilder.Entity("NETCORE.Models.DB.VwKpiSum", b =>
                {
                    b.Property<decimal?>("Acthrs")
                        .HasColumnType("numeric(38,6)")
                        .HasColumnName("ACTHRS");

                    b.Property<decimal?>("Mchrs")
                        .HasColumnType("numeric(38,6)");

                    b.Property<string>("Monum")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nchar(12)")
                        .HasColumnName("monum")
                        .IsFixedLength(true);

                    b.Property<decimal?>("RecycStock")
                        .HasColumnType("numeric(38,2)")
                        .HasColumnName("RECYC_STOCK");

                    b.Property<decimal?>("Wdhrs")
                        .HasColumnType("numeric(38,6)");

                    b.ToView("VW_KPI_SUM");
                });

            modelBuilder.Entity("NETCORE.Models.DB.VwPipeKpiSum", b =>
                {
                    b.Property<decimal?>("BondingHrs")
                        .HasColumnType("numeric(38,6)")
                        .HasColumnName("Bonding Hrs");

                    b.Property<string>("Monum")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("MONUM")
                        .UseCollation("Thai_BIN");

                    b.Property<decimal?>("PackingHrs")
                        .HasColumnType("numeric(38,6)")
                        .HasColumnName("Packing Hrs");

                    b.Property<decimal?>("PunchingHrs")
                        .HasColumnType("numeric(38,6)")
                        .HasColumnName("Punching Hrs");

                    b.Property<decimal?>("SlitingHrs")
                        .HasColumnType("numeric(38,6)")
                        .HasColumnName("Sliting Hrs");

                    b.Property<decimal?>("VerticalHrs")
                        .HasColumnType("numeric(38,6)")
                        .HasColumnName("Vertical Hrs");

                    b.ToView("VW_PIPE_KPI_SUM");
                });

            modelBuilder.Entity("NETCORE.Models.DB.WebAnnualLeaveRemain", b =>
                {
                    b.Property<int>("RowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("rowId")
                        .UseIdentityColumn();

                    b.Property<string>("CreateBy")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("createBy");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("createDate");

                    b.Property<int?>("EmpCode")
                        .HasColumnType("int")
                        .HasColumnName("empCode");

                    b.Property<DateTime?>("Enddate")
                        .HasColumnType("datetime")
                        .HasColumnName("enddate");

                    b.Property<decimal?>("Qty")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("qty");

                    b.Property<decimal?>("Refun")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("refun");

                    b.Property<long?>("Status")
                        .HasColumnType("bigint")
                        .HasColumnName("status");

                    b.Property<int?>("Year")
                        .HasColumnType("int")
                        .HasColumnName("year");

                    b.HasKey("RowId");

                    b.ToTable("WEB_annualLeaveRemain");
                });

            modelBuilder.Entity("NETCORE.Models.DB.WebAttApprovePm", b =>
                {
                    b.Property<int>("Rowid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("rowid")
                        .UseIdentityColumn();

                    b.Property<long?>("Applevel")
                        .HasColumnType("bigint")
                        .HasColumnName("applevel");

                    b.Property<string>("CreateBy")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("create_by");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("create_date");

                    b.Property<string>("Department")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("department");

                    b.Property<int?>("EmpCode")
                        .HasColumnType("int")
                        .HasColumnName("empCode");

                    b.Property<string>("Section")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("section");

                    b.Property<long?>("Status")
                        .HasColumnType("bigint")
                        .HasColumnName("status");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("update_by");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("update_date");

                    b.HasKey("Rowid");

                    b.ToTable("WEB_AttApprovePMS");
                });

            modelBuilder.Entity("NETCORE.Models.DB.WebAttCategory", b =>
                {
                    b.Property<int>("RowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("rowId")
                        .UseIdentityColumn();

                    b.Property<string>("Category")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("category");

                    b.Property<string>("CreateBy")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("createBy");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("createDate");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name");

                    b.Property<string>("NameTh")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("nameTh");

                    b.Property<long?>("Status")
                        .HasColumnType("bigint")
                        .HasColumnName("status");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("updateBy");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("updateDate");

                    b.Property<string>("Value")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("value");

                    b.HasKey("RowId");

                    b.ToTable("WEB_AttCategory");
                });

            modelBuilder.Entity("NETCORE.Models.DB.WebAttLeave", b =>
                {
                    b.Property<int>("RowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("rowId")
                        .UseIdentityColumn();

                    b.Property<string>("Atkfile")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("atkfile");

                    b.Property<string>("CancelBy")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("cancelBy");

                    b.Property<string>("CancelComment")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("cancelComment");

                    b.Property<DateTime?>("CancelDate")
                        .HasColumnType("datetime")
                        .HasColumnName("cancelDate");

                    b.Property<string>("CreateBy")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("createBy");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("createDate");

                    b.Property<DateTime?>("DateFrom")
                        .HasColumnType("datetime")
                        .HasColumnName("dateFrom");

                    b.Property<DateTime?>("DateTo")
                        .HasColumnType("datetime")
                        .HasColumnName("dateTo");

                    b.Property<int>("EmpCode")
                        .HasColumnType("int")
                        .HasColumnName("empCode");

                    b.Property<string>("Leave")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("leave");

                    b.Property<string>("MngApproveBy")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("mngApproveBy");

                    b.Property<DateTime?>("MngApproveDate")
                        .HasColumnType("datetime")
                        .HasColumnName("mngApproveDate");

                    b.Property<int?>("Qty")
                        .HasColumnType("int")
                        .HasColumnName("qty");

                    b.Property<string>("Remark")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("remark");

                    b.Property<long?>("Status")
                        .HasColumnType("bigint")
                        .HasColumnName("status");

                    b.Property<string>("SupApproveBy")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("supApproveBy");

                    b.Property<DateTime?>("SupApproveDate")
                        .HasColumnType("datetime")
                        .HasColumnName("supApproveDate");

                    b.Property<decimal?>("Time")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("time");

                    b.Property<string>("Typeleave")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("typeleave");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("updateBy");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("updateDate");

                    b.HasKey("RowId");

                    b.HasIndex("EmpCode");

                    b.ToTable("WEB_AttLeave");
                });

            modelBuilder.Entity("NETCORE.Models.DB.WebAttQuotaLeave", b =>
                {
                    b.Property<int>("Rowid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("rowid")
                        .UseIdentityColumn();

                    b.Property<string>("CreateBy")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("create_by");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("create_date");

                    b.Property<DateTime?>("Datefrom")
                        .HasColumnType("datetime")
                        .HasColumnName("datefrom");

                    b.Property<DateTime?>("Dateto")
                        .HasColumnType("datetime")
                        .HasColumnName("dateto");

                    b.Property<string>("Department")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("department");

                    b.Property<int?>("Qty")
                        .HasColumnType("int")
                        .HasColumnName("qty");

                    b.Property<string>("Section")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("section");

                    b.Property<long?>("Status")
                        .HasColumnType("bigint")
                        .HasColumnName("status");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("type");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("update_by");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("update_date");

                    b.HasKey("Rowid");

                    b.ToTable("WEB_AttQuotaLeave");
                });

            modelBuilder.Entity("NETCORE.Models.DB.WebAttTimesD", b =>
                {
                    b.Property<int>("No")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("no")
                        .UseIdentityColumn();

                    b.Property<string>("ApproveMng")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("approveMng");

                    b.Property<DateTime?>("ApproveMngDate")
                        .HasColumnType("datetime")
                        .HasColumnName("approveMngDate");

                    b.Property<string>("ApproveSup")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("approveSup");

                    b.Property<DateTime?>("ApproveSupDate")
                        .HasColumnType("datetime")
                        .HasColumnName("approveSupDate");

                    b.Property<string>("Area")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("area");

                    b.Property<DateTime?>("CancelDate")
                        .HasColumnType("datetime")
                        .HasColumnName("cancelDate");

                    b.Property<string>("Cancelby")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("cancelby");

                    b.Property<string>("CreateBy")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("createBy");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("create_date");

                    b.Property<DateTime?>("Dates")
                        .HasColumnType("datetime")
                        .HasColumnName("dates");

                    b.Property<int?>("Empcode")
                        .HasColumnType("int")
                        .HasColumnName("empcode");

                    b.Property<int?>("IdHead")
                        .HasColumnType("int")
                        .HasColumnName("idHead");

                    b.Property<decimal?>("Ot15af")
                        .HasColumnType("decimal(18,1)")
                        .HasColumnName("ot15af");

                    b.Property<decimal?>("Ot15bf")
                        .HasColumnType("decimal(18,1)")
                        .HasColumnName("ot15bf");

                    b.Property<decimal?>("Ot1af")
                        .HasColumnType("decimal(18,1)")
                        .HasColumnName("ot1af");

                    b.Property<decimal?>("Ot1bf")
                        .HasColumnType("decimal(18,1)")
                        .HasColumnName("ot1bf");

                    b.Property<decimal?>("Ot3af")
                        .HasColumnType("decimal(18,1)")
                        .HasColumnName("ot3af");

                    b.Property<decimal?>("Ot3bf")
                        .HasColumnType("decimal(18,1)")
                        .HasColumnName("ot3bf");

                    b.Property<string>("Reason")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("reason");

                    b.Property<string>("Remark")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("remark");

                    b.Property<string>("Shift")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("shift");

                    b.Property<long?>("Status")
                        .HasColumnType("bigint")
                        .HasColumnName("status");

                    b.Property<string>("Takeleave")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("takeleave");

                    b.Property<string>("Team")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("team");

                    b.Property<decimal?>("Transport")
                        .HasColumnType("decimal(18,1)")
                        .HasColumnName("transport");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("updateBy");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("updateDate");

                    b.Property<string>("Users")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("users");

                    b.HasKey("No");

                    b.HasIndex("Empcode");

                    b.ToTable("WEB_AttTimesD");
                });

            modelBuilder.Entity("NETCORE.Models.DB.WebAttTimesH", b =>
                {
                    b.Property<int>("No")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("no")
                        .UseIdentityColumn();

                    b.Property<string>("Approve")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("approve");

                    b.Property<string>("Approveby")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("approveby");

                    b.Property<string>("CreateBy")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("createBy");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("createDate");

                    b.Property<string>("EmpCode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("empCode");

                    b.Property<int?>("Month")
                        .HasColumnType("int")
                        .HasColumnName("month");

                    b.Property<long?>("Status")
                        .HasColumnType("bigint")
                        .HasColumnName("status");

                    b.Property<int?>("Year")
                        .HasColumnType("int")
                        .HasColumnName("year");

                    b.HasKey("No");

                    b.ToTable("WEB_AttTimesH");
                });

            modelBuilder.Entity("NETCORE.Models.DB.WebAttUpdateLeaveToBplusLog", b =>
                {
                    b.Property<int>("RowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("rowId")
                        .UseIdentityColumn();

                    b.Property<string>("CreateBy")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("createBy");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("createDate");

                    b.Property<DateTime?>("Dates")
                        .HasColumnType("datetime")
                        .HasColumnName("dates");

                    b.Property<string>("EmpCode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("empCode");

                    b.Property<string>("LeaveNew")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("leaveNew");

                    b.Property<string>("LeaveOld")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("leaveOld");

                    b.Property<string>("SfKeynew")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("SF_KEYNew");

                    b.Property<string>("SfKeyold")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("SF_KEYOld");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("status");

                    b.Property<string>("TimescanInNew")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("timescanInNew");

                    b.Property<string>("TimescanInOld")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("timescanInOld");

                    b.Property<string>("TimescanOutNew")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("timescanOutNew");

                    b.Property<string>("TimescanOutOld")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("timescanOutOld");

                    b.HasKey("RowId");

                    b.ToTable("WEB_AttUpdateLeaveToBplusLog");
                });

            modelBuilder.Entity("NETCORE.Models.DB.WebBorrowItequipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("createDate");

                    b.Property<string>("Createby")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("createby");

                    b.Property<DateTime?>("DateFrom")
                        .HasColumnType("datetime")
                        .HasColumnName("dateFrom");

                    b.Property<DateTime?>("DateTo")
                        .HasColumnType("datetime")
                        .HasColumnName("dateTo");

                    b.Property<string>("Detail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("detail");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.Property<string>("RequestBy")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("requestBy");

                    b.Property<string>("ResponBy")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("responBy");

                    b.Property<string>("Status")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("status")
                        .IsFixedLength(true);

                    b.Property<string>("Statusjob")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("statusjob");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("updateBy");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("updateDate");

                    b.HasKey("Id");

                    b.ToTable("WEB_borrowITequipment");
                });

            modelBuilder.Entity("NETCORE.Models.DB.WebComputeraccess", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .UseIdentityColumn();

                    b.Property<string>("Brand")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("brand");

                    b.Property<string>("Createby")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("createby");

                    b.Property<DateTime?>("Createdate")
                        .HasColumnType("datetime")
                        .HasColumnName("createdate");

                    b.Property<string>("Fixasset")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("fixasset");

                    b.Property<string>("Model")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("model");

                    b.Property<string>("Name")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("name");

                    b.Property<string>("PrNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("prNumber");

                    b.Property<int?>("Qty")
                        .HasColumnType("int")
                        .HasColumnName("qty");

                    b.Property<string>("Remark")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("remark");

                    b.Property<string>("SerialNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("serialNumber");

                    b.Property<long?>("Status")
                        .HasColumnType("bigint")
                        .HasColumnName("status");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("type");

                    b.Property<string>("Updateby")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("updateby");

                    b.Property<DateTime?>("Updatedate")
                        .HasColumnType("datetime")
                        .HasColumnName("updatedate");

                    b.Property<DateTime?>("Usage")
                        .HasColumnType("datetime")
                        .HasColumnName("usage");

                    b.Property<int?>("Waranty")
                        .HasColumnType("int")
                        .HasColumnName("waranty");

                    b.Property<string>("Warantystatus")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("warantystatus");

                    b.HasKey("Id");

                    b.ToTable("WEB_computeraccess");
                });

            modelBuilder.Entity("NETCORE.Models.DB.WebComputeraccessBrand", b =>
                {
                    b.Property<int>("IdBrand")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_brand")
                        .UseIdentityColumn();

                    b.Property<string>("CreateByBrand")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("createBy_brand");

                    b.Property<DateTime?>("CreateDateBrand")
                        .HasColumnType("datetime")
                        .HasColumnName("createDate_brand");

                    b.Property<string>("NameBrand")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name_brand");

                    b.Property<long?>("StatusBrand")
                        .HasColumnType("bigint")
                        .HasColumnName("status_brand");

                    b.HasKey("IdBrand");

                    b.ToTable("WEB_computeraccessBrand");
                });

            modelBuilder.Entity("NETCORE.Models.DB.WebComputeraccessCategory", b =>
                {
                    b.Property<int>("IdCategory")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_category")
                        .UseIdentityColumn();

                    b.Property<string>("CreateByCategory")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("createBy_category");

                    b.Property<DateTime?>("CreateDateCategory")
                        .HasColumnType("datetime")
                        .HasColumnName("createDate_category");

                    b.Property<string>("NameCategory")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name_category");

                    b.Property<string>("RemarkCategory")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("remark_category");

                    b.Property<long?>("StatusCategory")
                        .HasColumnType("bigint")
                        .HasColumnName("status_category");

                    b.HasKey("IdCategory");

                    b.ToTable("WEB_computeraccessCategory");
                });

            modelBuilder.Entity("NETCORE.Models.DB.WebComputeraccessDestroy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .UseIdentityColumn();

                    b.Property<int?>("ComaccessId")
                        .HasColumnType("int")
                        .HasColumnName("comaccess_id");

                    b.Property<string>("CreateBy")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("create_by");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("create_date");

                    b.Property<DateTime?>("DateDestroy")
                        .HasColumnType("datetime")
                        .HasColumnName("dateDestroy");

                    b.Property<int?>("Header")
                        .HasColumnType("int")
                        .HasColumnName("header");

                    b.Property<string>("Name")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("name");

                    b.Property<int?>("Qty")
                        .HasColumnType("int")
                        .HasColumnName("qty");

                    b.Property<string>("Remark")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("remark");

                    b.Property<long?>("Status")
                        .HasColumnType("bigint")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.ToTable("WEB_computeraccessDestroy");
                });

            modelBuilder.Entity("NETCORE.Models.DB.WebComputeraccessHandelUse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .UseIdentityColumn();

                    b.Property<string>("CreateBy")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("createBy");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("createDate");

                    b.Property<DateTime?>("Dates")
                        .HasColumnType("datetime")
                        .HasColumnName("dates");

                    b.Property<int?>("Header")
                        .HasColumnType("int")
                        .HasColumnName("header");

                    b.Property<int?>("IdComaccess")
                        .HasColumnType("int")
                        .HasColumnName("id_comaccess");

                    b.Property<int?>("IdEmp")
                        .HasColumnType("int")
                        .HasColumnName("id_emp");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.Property<int?>("Qty")
                        .HasColumnType("int")
                        .HasColumnName("qty");

                    b.Property<long?>("Status")
                        .HasColumnType("bigint")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.ToTable("WEB_computeraccessHandelUse");
                });

            modelBuilder.Entity("NETCORE.Models.DB.WebEmployeeList", b =>
                {
                    b.Property<int>("EmpCode")
                        .HasColumnType("int")
                        .HasColumnName("empCode");

                    b.Property<double?>("DepCode")
                        .HasColumnType("float")
                        .HasColumnName("depCode");

                    b.Property<string>("Department")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("department");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("email");

                    b.Property<string>("LnameEn")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("lnameEN");

                    b.Property<string>("LnameTh")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("lnameTH");

                    b.Property<string>("NameEn")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("nameEN");

                    b.Property<string>("NameTh")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("nameTH");

                    b.Property<string>("Position")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("position");

                    b.Property<string>("Section")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("section");

                    b.Property<double?>("Status")
                        .HasColumnType("float");

                    b.Property<string>("UsernameAd")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("usernameAD");

                    b.Property<DateTime?>("WorkDate")
                        .HasColumnType("datetime")
                        .HasColumnName("workDate");

                    b.HasKey("EmpCode");

                    b.ToTable("WEB_EmployeeList");
                });

            modelBuilder.Entity("NETCORE.Models.DB.WebItpassword", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .UseIdentityColumn();

                    b.Property<string>("Area")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("area");

                    b.Property<string>("CreateBy")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("createBy");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("createDate");

                    b.Property<string>("Detail")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("detail");

                    b.Property<string>("IpAddress")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ip_address");

                    b.Property<string>("Model")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("model");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("password");

                    b.Property<long?>("Status")
                        .HasColumnType("bigint")
                        .HasColumnName("status");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("type");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("updateBy");

                    b.Property<string>("UpdateDate")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("updateDate");

                    b.Property<string>("Username")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("username");

                    b.HasKey("Id");

                    b.ToTable("WEB_itpassword");
                });

            modelBuilder.Entity("NETCORE.Models.DB.WebNews", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .UseIdentityColumn();

                    b.Property<string>("Createby")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("createby");

                    b.Property<DateTime?>("Createdate")
                        .HasColumnType("datetime")
                        .HasColumnName("createdate");

                    b.Property<DateTime?>("Dates")
                        .HasColumnType("datetime")
                        .HasColumnName("dates");

                    b.Property<string>("Department")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("department");

                    b.Property<string>("Detail")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("detail");

                    b.Property<string>("Pic")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("pic");

                    b.Property<long?>("Status")
                        .HasColumnType("bigint")
                        .HasColumnName("status");

                    b.Property<string>("Subject")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("subject");

                    b.HasKey("Id");

                    b.ToTable("WEB_news");
                });

            modelBuilder.Entity("NETCORE.Models.DB.WebPermisionLogin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .UseIdentityColumn();

                    b.Property<string>("Createby")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("createby");

                    b.Property<DateTime?>("Createdate")
                        .HasColumnType("datetime")
                        .HasColumnName("createdate");

                    b.Property<string>("DepUser")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("dep_user");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name");

                    b.Property<string>("Permision")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("permision");

                    b.Property<int?>("Runno")
                        .HasColumnType("int")
                        .HasColumnName("runno");

                    b.Property<long?>("Status")
                        .HasColumnType("bigint")
                        .HasColumnName("status");

                    b.Property<string>("Updateby")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("updateby");

                    b.Property<DateTime?>("Updatedate")
                        .HasColumnType("datetime")
                        .HasColumnName("updatedate");

                    b.HasKey("Id");

                    b.ToTable("WEB_permision_login");
                });

            modelBuilder.Entity("NETCORE.Models.DB.WebPositionLevel", b =>
                {
                    b.Property<string>("CreateBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("createBy");

                    b.Property<string>("CreateDate")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("createDate");

                    b.Property<string>("Department")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("department");

                    b.Property<double?>("Level")
                        .HasColumnType("float")
                        .HasColumnName("level");

                    b.Property<string>("Position")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("position");

                    b.Property<double?>("RowId")
                        .HasColumnType("float")
                        .HasColumnName("rowId");

                    b.Property<double?>("Status")
                        .HasColumnType("float")
                        .HasColumnName("status");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("updateBy");

                    b.Property<string>("UpdateDate")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("updateDate");

                    b.ToTable("Web_PositionLevel");
                });

            modelBuilder.Entity("NETCORE.Models.DB.WebSpinsoft", b =>
                {
                    b.Property<int>("Rowid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("rowid")
                        .UseIdentityColumn();

                    b.Property<string>("Agreement")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("agreement");

                    b.Property<string>("Createby")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("createby");

                    b.Property<int?>("Createdate")
                        .HasColumnType("int")
                        .HasColumnName("createdate");

                    b.Property<int?>("Enddate")
                        .HasColumnType("int")
                        .HasColumnName("enddate");

                    b.Property<string>("Learned")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("learned");

                    b.Property<string>("Levels")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("levels");

                    b.Property<string>("Location")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("location");

                    b.Property<string>("Problem")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("problem");

                    b.Property<string>("Process")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("process");

                    b.Property<int?>("Queue")
                        .HasColumnType("int")
                        .HasColumnName("queue");

                    b.Property<string>("RequestBy")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("requestBy");

                    b.Property<int?>("RequestDate")
                        .HasColumnType("int")
                        .HasColumnName("requestDate");

                    b.Property<string>("RequestTo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("requestTo");

                    b.Property<string>("Resources")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("resources");

                    b.Property<string>("ResponBy")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("responBy");

                    b.Property<string>("Section")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("section");

                    b.Property<int?>("Startdate")
                        .HasColumnType("int")
                        .HasColumnName("startdate");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("type");

                    b.Property<string>("Updateby")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("updateby");

                    b.Property<int?>("Updatedate")
                        .HasColumnType("int")
                        .HasColumnName("updatedate");

                    b.HasKey("Rowid")
                        .HasName("PK_WEB_itsupport");

                    b.ToTable("WEB_spinsoft");
                });

            modelBuilder.Entity("NETCORE.Models.DB.WebSwitchHolidayD", b =>
                {
                    b.Property<int>("Rowid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("rowid")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("Dates")
                        .HasColumnType("datetime")
                        .HasColumnName("dates");

                    b.Property<string>("Empcode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("empcode");

                    b.Property<int?>("Idhead")
                        .HasColumnType("int")
                        .HasColumnName("idhead");

                    b.Property<decimal?>("Qty")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("qty");

                    b.HasKey("Rowid");

                    b.ToTable("WEB_switchHolidayD");
                });

            modelBuilder.Entity("NETCORE.Models.DB.WebSwitchHolidayH", b =>
                {
                    b.Property<int>("Rowid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("rowid")
                        .UseIdentityColumn();

                    b.Property<string>("ApproveMng")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("approveMng");

                    b.Property<DateTime?>("ApproveMngDate")
                        .HasColumnType("datetime")
                        .HasColumnName("approveMngDate");

                    b.Property<string>("ApproveSup")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("approveSup");

                    b.Property<DateTime?>("ApproveSupDate")
                        .HasColumnType("datetime")
                        .HasColumnName("approveSupDate");

                    b.Property<string>("CancelComment")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("cancelComment");

                    b.Property<DateTime?>("CancelDate")
                        .HasColumnType("datetime")
                        .HasColumnName("cancelDate");

                    b.Property<string>("Cancelby")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("cancelby");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("createDate");

                    b.Property<string>("Createby")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("createby");

                    b.Property<DateTime?>("Datefrom")
                        .HasColumnType("datetime")
                        .HasColumnName("datefrom");

                    b.Property<DateTime?>("Dateto")
                        .HasColumnType("datetime")
                        .HasColumnName("dateto");

                    b.Property<string>("Empcode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("empcode");

                    b.Property<decimal?>("Qty")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("qty");

                    b.Property<string>("Remark")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("remark");

                    b.Property<long?>("Status")
                        .HasColumnType("bigint")
                        .HasColumnName("status");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("type");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("updateDate");

                    b.Property<string>("Updateby")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("updateby");

                    b.HasKey("Rowid");

                    b.ToTable("WEB_switchHolidayH");
                });

            modelBuilder.Entity("NETCORE.Models.DB.WebSwitchHolidayList", b =>
                {
                    b.Property<int>("Rowid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("rowid")
                        .UseIdentityColumn();

                    b.Property<string>("ApproveMngby")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("approveMngby");

                    b.Property<DateTime?>("ApproveMngdate")
                        .HasColumnType("datetime")
                        .HasColumnName("approveMngdate");

                    b.Property<string>("ApproveSupby")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("approveSupby");

                    b.Property<DateTime?>("ApproveSupdate")
                        .HasColumnType("datetime")
                        .HasColumnName("approveSupdate");

                    b.Property<string>("Approveby")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("approveby");

                    b.Property<DateTime?>("Approvedate")
                        .HasColumnType("datetime")
                        .HasColumnName("approvedate");

                    b.Property<string>("Cancelby")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("cancelby");

                    b.Property<DateTime?>("Canceldate")
                        .HasColumnType("datetime")
                        .HasColumnName("canceldate");

                    b.Property<string>("Commentcancel")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("commentcancel");

                    b.Property<string>("Createby")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("createby");

                    b.Property<DateTime?>("Createdate")
                        .HasColumnType("datetime")
                        .HasColumnName("createdate");

                    b.Property<DateTime?>("Datefrom")
                        .HasColumnType("datetime")
                        .HasColumnName("datefrom");

                    b.Property<DateTime?>("Dates")
                        .HasColumnType("datetime")
                        .HasColumnName("dates");

                    b.Property<DateTime?>("Dateto")
                        .HasColumnType("datetime")
                        .HasColumnName("dateto");

                    b.Property<int?>("Empcode")
                        .HasColumnType("int")
                        .HasColumnName("empcode");

                    b.Property<decimal?>("Qty")
                        .HasColumnType("decimal(18,1)")
                        .HasColumnName("qty");

                    b.Property<string>("Remark")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("remark");

                    b.Property<long?>("Status")
                        .HasColumnType("bigint")
                        .HasColumnName("status");

                    b.Property<string>("Updateby")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("updateby");

                    b.Property<DateTime?>("Updatedate")
                        .HasColumnType("datetime")
                        .HasColumnName("updatedate");

                    b.HasKey("Rowid");

                    b.ToTable("WEB_switchHolidayList");
                });

            modelBuilder.Entity("NETCORE.Models.DB.WebTelephoneList", b =>
                {
                    b.Property<int>("No")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Area")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("area");

                    b.Property<string>("Concurrent")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("concurrent");

                    b.Property<string>("CreateBy")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("createBy");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("createDate");

                    b.Property<string>("Empid")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EMPID");

                    b.Property<string>("Gtranfer")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("gtranfer");

                    b.Property<long?>("Inter")
                        .HasColumnType("bigint")
                        .HasColumnName("inter");

                    b.Property<string>("IpPhone")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ipPhone");

                    b.Property<string>("Ipaddress")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ipaddress");

                    b.Property<long?>("Local")
                        .HasColumnType("bigint")
                        .HasColumnName("local");

                    b.Property<long?>("Longdisc")
                        .HasColumnType("bigint")
                        .HasColumnName("longdisc");

                    b.Property<string>("Macaddress")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("macaddress");

                    b.Property<long?>("Mobile")
                        .HasColumnType("bigint")
                        .HasColumnName("mobile");

                    b.Property<string>("Section")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("section");

                    b.Property<long?>("Status")
                        .HasColumnType("bigint")
                        .HasColumnName("status");

                    b.Property<string>("Tel")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("tel");

                    b.Property<string>("Telin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("telin");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("updateBy");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("updateDate");

                    b.HasKey("No")
                        .HasName("PK_UF_WEB_telephoneList");

                    b.ToTable("WEB_telephoneList");
                });

            modelBuilder.Entity("NETCORE.Models.DB.WebTopicOt", b =>
                {
                    b.Property<int>("Rowid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("rowid")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("name");

                    b.Property<long?>("Status")
                        .HasColumnType("bigint")
                        .HasColumnName("status");

                    b.HasKey("Rowid");

                    b.ToTable("WEB_topicOT");
                });

            modelBuilder.Entity("NETCORE.Models.DB.KpiSlitMo", b =>
                {
                    b.HasOne("NETCORE.Models.DB.KpihSlit", "Entry")
                        .WithMany("KpiSlitMos")
                        .HasForeignKey("EntryId")
                        .HasConstraintName("FK_KPI_SLIT_MO_KPIH_SLIT")
                        .IsRequired();

                    b.Navigation("Entry");
                });

            modelBuilder.Entity("NETCORE.Models.DB.KpidailySlit", b =>
                {
                    b.HasOne("NETCORE.Models.DB.KpihSlit", "Entry")
                        .WithMany("KpidailySlits")
                        .HasForeignKey("EntryId")
                        .HasConstraintName("FK_KPIDAILY_SLIT_KPIH_SLIT")
                        .IsRequired();

                    b.Navigation("Entry");
                });

            modelBuilder.Entity("NETCORE.Models.DB.WebAttLeave", b =>
                {
                    b.HasOne("NETCORE.Models.DB.WebEmployeeList", "EmpCodeNavigation")
                        .WithMany("WebAttLeaves")
                        .HasForeignKey("EmpCode")
                        .HasConstraintName("FK_WEB_AttLeave_WEB_EmployeeList")
                        .IsRequired();

                    b.Navigation("EmpCodeNavigation");
                });

            modelBuilder.Entity("NETCORE.Models.DB.WebAttTimesD", b =>
                {
                    b.HasOne("NETCORE.Models.DB.WebEmployeeList", "EmpcodeNavigation")
                        .WithMany("WebAttTimesDs")
                        .HasForeignKey("Empcode")
                        .HasConstraintName("FK_WEB_AttTimesD_WEB_AttTimesD");

                    b.Navigation("EmpcodeNavigation");
                });

            modelBuilder.Entity("NETCORE.Models.DB.KpihSlit", b =>
                {
                    b.Navigation("KpidailySlits");

                    b.Navigation("KpiSlitMos");
                });

            modelBuilder.Entity("NETCORE.Models.DB.WebEmployeeList", b =>
                {
                    b.Navigation("WebAttLeaves");

                    b.Navigation("WebAttTimesDs");
                });
#pragma warning restore 612, 618
        }
    }
}
